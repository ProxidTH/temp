{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f4\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f5\fnil\fprq2\fcharset0 Arial;}{\f6\fswiss\fprq0\fcharset128 Arial;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\dbch\af4\dbch\af5\afs28\loch\f3\fs28 Heading;}
{\s16\sbasedon0\snext16\sl276\slmult1\sb0\sa140 Text Body;}
{\s17\sbasedon16\snext17\sl276\slmult1\sb0\sa140\dbch\af6 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af6\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af6 Index;}
}{\*\generator Neat_Office/6.2.8.2$Windows_x86 LibreOffice_project/}{\info{\creatim\yr2021\mo2\dy24\hr7\min27}{\revtim\yr2021\mo2\dy24\hr7\min51}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab709
\viewscale110
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Style;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
/*******************************************}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
This is a basic UVM "Hello World" testbench.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
Explanation of this testbench on YouTube:}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
https://www.youtube.com/watch?v=Qn6SvG-Kya0}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
*******************************************/}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
`include "uvm_macros.svh"}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
`include "my_testbench_pkg.svh"}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// The top module that contains the DUT and interface.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// This module starts the test.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
module top;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
import uvm_pkg::*;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
import my_testbench_pkg::*;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// Instantiate the interface}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
dut_if dut_if1();}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// Instantiate the DUT and connect it to the interface}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
dut dut1(.dif(dut_if1));}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// Clock generator}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
initial begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
dut_if1.clock = 0;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
forever #5 dut_if1.clock = ~dut_if1.clock;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
initial begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// Place the interface into the UVM configuration database}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
uvm_config_db#(virtual dut_if)::set(null, "*", "dut_vif", dut_if1);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// Start the test}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
run_test("my_test");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// Dump waves}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
initial begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
$dumpfile("dump.vcd");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
$dumpvars(0, top);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endmodule}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
(testbench.sv)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\brdrb\brdrdb\brdrw6\brdrcf1\brsp42\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// This is the SystemVerilog interface that we will use to connect}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// our design to our UVM testbench.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
interface dut_if;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
logic clock, reset;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
logic cmd;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
logic [7:0] addr;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
logic [7:0] data;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endinterface}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
`include "uvm_macros.svh"}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// This is our design module.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// It is an empty design that simply prints a message whenever}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
// the clock toggles.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
module dut(dut_if dif);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
import uvm_pkg::*;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
always @(posedge dif.clock)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
if (dif.reset != 1) begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
`uvm_info("DUT",}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
                }{\rtlch \ltrch\loch
$sformatf("Received cmd=%b, addr=0x%2h, data=0x%2h",}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
                          }{\rtlch \ltrch\loch
dif.cmd, dif.addr, dif.data), UVM_MEDIUM)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endmodule}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
(design.sv)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\brdrb\brdrdb\brdrw6\brdrcf1\brsp42\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
package my_testbench_pkg;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
import uvm_pkg::*;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// The UVM sequence, transaction item, and driver are in these files:}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
`include "my_sequence.svh"}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
`include "my_driver.svh"}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
// The agent contains sequencer, driver, and monitor (not included)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
class my_agent extends uvm_agent;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
`uvm_component_utils(my_agent)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
my_driver driver;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
uvm_sequencer#(my_transaction) sequencer;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function new(string name, uvm_component parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
super.new(name, parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function void build_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
driver = my_driver ::type_id::create("driver", this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
sequencer =}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
        }{\rtlch \ltrch\loch
uvm_sequencer#(my_transaction)::type_id::create("sequencer", this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// In UVM connect phase, we connect the sequencer to the driver.}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function void connect_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
driver.seq_item_port.connect(sequencer.seq_item_export);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
task run_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// We raise objection to keep the test from completing}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
phase.raise_objection(this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
        }{\rtlch \ltrch\loch
my_sequence seq;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
        }{\rtlch \ltrch\loch
seq = my_sequence::type_id::create("seq");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
        }{\rtlch \ltrch\loch
seq.start(sequencer);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// We drop objection to allow the test to complete}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
phase.drop_objection(this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endtask}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endclass}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
class my_env extends uvm_env;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
`uvm_component_utils(my_env)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
my_agent agent;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function new(string name, uvm_component parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
super.new(name, parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function void build_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
agent = my_agent::type_id::create("agent", this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endclass}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
class my_test extends uvm_test;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
`uvm_component_utils(my_test)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
my_env env;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function new(string name, uvm_component parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
super.new(name, parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
function void build_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
env = my_env::type_id::create("env", this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
task run_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// We raise objection to keep the test from completing}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
phase.raise_objection(this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
#10;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
`uvm_warning("", "Hello World!")}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// We drop objection to allow the test to complete}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
phase.drop_objection(this);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
endtask}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endclass}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endpackage}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\brdrb\brdrdb\brdrw6\brdrcf1\brsp42{\rtlch \ltrch\loch
(my_testbench_package.svh)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
class my_transaction extends uvm_sequence_item;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
`uvm_object_utils(my_transaction)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
rand bit cmd;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
rand int addr;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
rand int data;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
constraint c_addr \{ addr >= 0; addr < 256; \}}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
constraint c_data \{ data >= 0; data < 256; \}}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
function new (string name = "");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
super.new(name);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endclass: my_transaction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
class my_sequence extends uvm_sequence#(my_transaction);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
`uvm_object_utils(my_sequence)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
function new (string name = "");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
super.new(name);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
task body;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
repeat(8) begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
req = my_transaction::type_id::create("req");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
start_item(req);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
if (!req.randomize()) begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
        }{\rtlch \ltrch\loch
`uvm_error("MY_SEQUENCE", "Randomize failed.");}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// If using ModelSim, which does not support randomize(),}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// we must randomize item using traditional methods, like}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// req.cmd = $urandom;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// req.addr = $urandom_range(0, 255);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// req.data = $urandom_range(0, 255);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
finish_item(req);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endtask: body}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endclass: my_sequence}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\brdrb\brdrdb\brdrw6\brdrcf1\brsp42{\rtlch \ltrch\loch
(my_sequence.svh)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
class my_driver extends uvm_driver #(my_transaction);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
`uvm_component_utils(my_driver)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
virtual dut_if dut_vif;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
function new(string name, uvm_component parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
super.new(name, parent);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endfunction}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
function void build_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// Get interface reference from config database}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
if(!uvm_config_db#(virtual dut_if)::get(this, "", "dut_vif", dut_vif)) begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
`uvm_error("", "uvm_config_db::get failed")}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endfunction }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
task run_phase(uvm_phase phase);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// First toggle reset}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
dut_vif.reset = 1;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
@(posedge dut_vif.clock);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
#1;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
dut_vif.reset = 0;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
// Now drive normal traffic}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
forever begin}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
seq_item_port.get_next_item(req);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
// Wiggle pins of DUT}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
dut_vif.cmd  = req.cmd;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
dut_vif.addr = req.addr;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
dut_vif.data = req.data;}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
@(posedge dut_vif.clock);}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
      }{\rtlch \ltrch\loch
seq_item_port.item_done();}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
    }{\rtlch \ltrch\loch
end}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch
  }{\rtlch \ltrch\loch
endtask}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
endclass: my_driver}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033{\rtlch \ltrch\loch
(my_driver.svh)}
\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af5\afs24\alang1081\loch\f0\hich\af0\fs24\lang1033\rtlch \ltrch\loch

\par }